[[plugins]]
repo = 'rgrinberg/vim-ocaml'
on_ft = 'ocaml'

# tex {{{
[[plugins]]
repo = 'lervag/vimtex'
on_ft = 'tex'
hook_post_source = '''
" let g:vimtex_view_method = 'general'
let g:vimtex_view_general_viewer ='evince'
let g:vimtex_fold_enabled = 0
" let g:vimtex_latexmk_options = '-pdfdvi'
let g:vimtex_latexmk_callback = 0

if !exists('g:neocomplete#sources#omni#input_patterns')
  let g:neocomplete#sources#omni#input_patterns = {}
endif
let g:neocomplete#sources#omni#input_patterns.tex = '\v\\\a*(ref|cite)\a*([^]]*\])?\{([^}]*,)*[^}]*'

if !exists('g:deoplete#omni#input_patterns')
  let g:deoplete#omni#input_patterns = {}
endif

let g:deoplete#omni#input_patterns.tex = g:vimtex#re#deoplete

vnoremap <silent> <LocalLeader>lf "ey
  \:call system("evince -l \"$(echo '" . @e . "' <bar> detex)\" " . fnamemodify(g:vimtex_data[0].tex, ":t:r") . ".pdf > /dev/null 2>&1")<CR>
'''
# }}}

# racket {{{
[[plugins]]
repo = 'wlangstroth/vim-racket'
on_ft = 'racket'

[[plugins]]
repo = 'kovisoft/slimv'
on_ft = 'racket'
# }}}

# scala {{{
[[plugins]]
repo = 'derekwyatt/vim-scala'
on_ft = 'scala'
# }}}

# ts {{{
[[plugins]]
repo = 'HerringtonDarkholme/yats.vim'
on_ft = 'typescript'
# }}}

# js {{{
[[plugins]]
repo = 'othree/yajs.vim'
on_ft = 'javascript'
# }}}

# json {{{
[[plugins]]
repo= 'elzr/vim-json'
on_ft = 'json'
# }}}

# css {{{
[[plugins]]
repo = 'iloginow/vim-stylus'
on_ft = 'stylus'

[[plugins]]
repo = 'gko/vim-coloresque'
# }}}

# pug {{{
[[plugins]]
repo = 'digitaltoad/vim-pug'
on_ft = 'pug'
# }}}

# haskell {{{
[[plugins]]
repo = 'dag/vim2hs'
on_ft = 'haskell'
hook_source = '''
let g:haskell_conceal = 0
'''

# [[plugins]]
# repo = 'itchyny/vim-haskell-indent'
# on_ft = 'haskell'

# [[plugins]]
# repo = 'neovimhaskell/haskell-vim'
# on_ft = 'haskell'

[[plugins]]
repo = 'pbrisbin/vim-syntax-shakespeare'
on_ft = 'hamlet'
# }}}

[[plugins]]
repo = 'Nymphium/vim-koka'
on_ft = 'koka'

# markdown {{{
[[plugins]]
repo = 'plasticboy/vim-markdown'
on_ft = 'markdown'
depends = ['tabular']
hook_post_source = '''
nnoremap <silent> <leader>lt :Toc<CR>
'''

[[plugins]]
repo = 'godlygeek/tabular'
on_ft = 'markdown'

hook_source = '''
let g:vim_markdown_folding_disabled = 1
let g:vim_markdown_conceal = 0
let g:tex_conceal = ""
let g:vim_markdown_math = 1
let g:vim_markdown_frontmatter = 1
'''

[[plugins]]
repo = 'iamcco/markdown-preview.nvim'
on_ft = 'markdown'
build = 'cd app && yarn install'
# }}}

[[plugins]]
repo = 'cespare/vim-toml'
on_ft = 'toml'

[[plugins]]
repo = 'drmingdrmer/vim-indent-lua'
on_ft = 'lua'

[[plugins]]
repo = 'LnL7/vim-nix'
on_ft = 'nix'

[[plugins]]
repo = 'ionide/Ionide-vim'
on_ft = 'fsharp'
build = 'make fsautocomplete'

hook_source = '''
let g:fsharp#automatic_workspace_init = 0
let g:fsharp#show_signature_on_cursor_move = 0
'''

[[plugins]]
repo =  'mustache/vim-mustache-handlebars'
on_ft = 'mustache'
